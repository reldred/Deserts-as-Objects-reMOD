grf {
    grfid: "CH\13\01";
    name:  string(STR_GRF_NAME);
    desc:  string(STR_GRF_DESCRIPTION);
    url:   string(STR_GRF_URL);
    version: 1;
    min_compatible_version: 1;

    param 0 {
        param_replace {
            name:      string(STR_PAR_replace_NAME);
            desc:      string(STR_PAR_replace_DESC);
            type:      int;
            min_value: 0;
            max_value: 6;
            def_value: 1;
            names: {
                0: string(STR_PAR_replace_NONE);
                1: string(STR_PAR_replace_OGFX2_grid);
                2: string(STR_PAR_replace_OGFX2_nogrid);
                3: string(STR_PAR_replace_OGFX_grid);
                4: string(STR_PAR_replace_OGFX_nogrid);
                5: string(STR_PAR_replace_OGFX2ARCTIC_grid);
                6: string(STR_PAR_replace_OGFX2ARCTIC_nogrid);
            };
        }
    }
    param 1 {
        param_OGFX_objects_grid {
            name:      string(STR_OGFX_objects_grid_NAME);
            desc:      string(STR_OGFX_objects_grid_DESC);
            type:      bool;
            def_value: 0;
        }
    }
    param 2 {
        param_OGFX_objects_nogrid {
            name:      string(STR_OGFX_objects_nogrid_NAME);
            desc:      string(STR_OGFX_objects_nogrid_DESC);
            type:      bool;
            def_value: 0;
        }
    }
    param 3 {
        param_OGFX2_objects_grid {
            name:      string(STR_OGFX2_objects_grid_NAME);
            desc:      string(STR_OGFX2_objects_grid_DESC);
            type:      bool;
            def_value: 1;
        }
    }
    param 4 {
        param_OGFX2_objects_nogrid {
            name:      string(STR_OGFX2_objects_nogrid_NAME);
            desc:      string(STR_OGFX2_objects_nogrid_DESC);
            type:      bool;
            def_value: 0;
        }
    }
    param 5 {
        param_random_oases_count {
            name:      string(STR_random_oases_NAME);
            desc:      string(STR_random_oases_DESC);
            type:      int;
            min_value: 0;
            max_value: 255;
            def_value: 4;
        }
    }
    param 6 {
        param_random_yellow_rocks_count {
            name:      string(STR_yellow_rocks_NAME);
            desc:      string(STR_random_rocks_DESC);
            type:      int;
            min_value: 0;
            max_value: 255;
            def_value: 8;
        }
    }
    param 7 {
        param_random_gray_rocks_count {
            name:      string(STR_gray_rocks_NAME);
            desc:      string(STR_random_rocks_DESC);
            type:      int;
            min_value: 0;
            max_value: 255;
            def_value: 0;
        }
    }
    param 8 {
        param_random_brown_rocks_count {
            name:      string(STR_brown_rocks_NAME);
            desc:      string(STR_random_rocks_DESC);
            type:      int;
            min_value: 0;
            max_value: 255;
            def_value: 0;
        }
    }
}

/////////////////////////////////////////////////////////////////////
//  TEMPLATES
/////////////////////////////////////////////////////////////////////

template template_groundtiles(y) {
    [   0, y*64, 64, 31, -31,   0, WHITE | ANIM]
    [  80, y*64, 64, 31, -31,   0, WHITE | ANIM]
    [ 160, y*64, 64, 23, -31,   0, WHITE | ANIM]
    [ 240, y*64, 64, 23, -31,   0, WHITE | ANIM]
    [ 320, y*64, 64, 31, -31,   0, WHITE | ANIM]
    [ 400, y*64, 64, 31, -31,   0, WHITE | ANIM]
    [ 480, y*64, 64, 23, -31,   0, WHITE | ANIM]
    [ 560, y*64, 64, 23, -31,   0, WHITE | ANIM]
    [ 640, y*64, 64, 39, -31,  -8, WHITE | ANIM]
    [ 720, y*64, 64, 39, -31,  -8, WHITE | ANIM]
    [ 800, y*64, 64, 31, -31,  -8, WHITE | ANIM]
    [ 880, y*64, 64, 31, -31,  -8, WHITE | ANIM]
    [ 960, y*64, 64, 39, -31,  -8, WHITE | ANIM]
    [1040, y*64, 64, 39, -31,  -8, WHITE | ANIM]
    [1120, y*64, 64, 31, -31,  -8, WHITE | ANIM]
    [1200, y*64, 64, 47, -31, -16, WHITE | ANIM]
    [1280, y*64, 64, 15, -31,   0, WHITE | ANIM]
    [1360, y*64, 64, 31, -31,  -8, WHITE | ANIM]
    [1440, y*64, 64, 31, -31,  -8, WHITE | ANIM]
}
template template_autosnow_4(y) {
    [   0, 0 + y*256, 64, 31, -31,   0, WHITE | ANIM]
    [  80, 0 + y*256, 64, 31, -31,   0, WHITE | ANIM]
    [ 160, 0 + y*256, 64, 23, -31,   0, WHITE | ANIM]
    [ 240, 0 + y*256, 64, 23, -31,   0, WHITE | ANIM]
    [ 320, 0 + y*256, 64, 31, -31,   0, WHITE | ANIM]
    [ 400, 0 + y*256, 64, 31, -31,   0, WHITE | ANIM]
    [ 480, 0 + y*256, 64, 23, -31,   0, WHITE | ANIM]
    [ 560, 0 + y*256, 64, 23, -31,   0, WHITE | ANIM]
    [ 640, 0 + y*256, 64, 39, -31,  -8, WHITE | ANIM]
    [ 720, 0 + y*256, 64, 39, -31,  -8, WHITE | ANIM]
    [ 800, 0 + y*256, 64, 31, -31,  -8, WHITE | ANIM]
    [ 880, 0 + y*256, 64, 31, -31,  -8, WHITE | ANIM]
    [ 960, 0 + y*256, 64, 39, -31,  -8, WHITE | ANIM]
    [1040, 0 + y*256, 64, 39, -31,  -8, WHITE | ANIM]
    [1120, 0 + y*256, 64, 31, -31,  -8, WHITE | ANIM]
    [1200, 0 + y*256, 64, 47, -31, -16, WHITE | ANIM]
    [1280, 0 + y*256, 64, 15, -31,   0, WHITE | ANIM]
    [1360, 0 + y*256, 64, 31, -31,  -8, WHITE | ANIM]
    [1440, 0 + y*256, 64, 31, -31,  -8, WHITE | ANIM]

    [   0, 64 + y*256, 64, 31, -31,   0, WHITE | ANIM]
    [  80, 64 + y*256, 64, 31, -31,   0, WHITE | ANIM]
    [ 160, 64 + y*256, 64, 23, -31,   0, WHITE | ANIM]
    [ 240, 64 + y*256, 64, 23, -31,   0, WHITE | ANIM]
    [ 320, 64 + y*256, 64, 31, -31,   0, WHITE | ANIM]
    [ 400, 64 + y*256, 64, 31, -31,   0, WHITE | ANIM]
    [ 480, 64 + y*256, 64, 23, -31,   0, WHITE | ANIM]
    [ 560, 64 + y*256, 64, 23, -31,   0, WHITE | ANIM]
    [ 640, 64 + y*256, 64, 39, -31,  -8, WHITE | ANIM]
    [ 720, 64 + y*256, 64, 39, -31,  -8, WHITE | ANIM]
    [ 800, 64 + y*256, 64, 31, -31,  -8, WHITE | ANIM]
    [ 880, 64 + y*256, 64, 31, -31,  -8, WHITE | ANIM]
    [ 960, 64 + y*256, 64, 39, -31,  -8, WHITE | ANIM]
    [1040, 64 + y*256, 64, 39, -31,  -8, WHITE | ANIM]
    [1120, 64 + y*256, 64, 31, -31,  -8, WHITE | ANIM]
    [1200, 64 + y*256, 64, 47, -31, -16, WHITE | ANIM]
    [1280, 64 + y*256, 64, 15, -31,   0, WHITE | ANIM]
    [1360, 64 + y*256, 64, 31, -31,  -8, WHITE | ANIM]
    [1440, 64 + y*256, 64, 31, -31,  -8, WHITE | ANIM]

    [   0, 128 + y*256, 64, 31, -31,   0, WHITE | ANIM]
    [  80, 128 + y*256, 64, 31, -31,   0, WHITE | ANIM]
    [ 160, 128 + y*256, 64, 23, -31,   0, WHITE | ANIM]
    [ 240, 128 + y*256, 64, 23, -31,   0, WHITE | ANIM]
    [ 320, 128 + y*256, 64, 31, -31,   0, WHITE | ANIM]
    [ 400, 128 + y*256, 64, 31, -31,   0, WHITE | ANIM]
    [ 480, 128 + y*256, 64, 23, -31,   0, WHITE | ANIM]
    [ 560, 128 + y*256, 64, 23, -31,   0, WHITE | ANIM]
    [ 640, 128 + y*256, 64, 39, -31,  -8, WHITE | ANIM]
    [ 720, 128 + y*256, 64, 39, -31,  -8, WHITE | ANIM]
    [ 800, 128 + y*256, 64, 31, -31,  -8, WHITE | ANIM]
    [ 880, 128 + y*256, 64, 31, -31,  -8, WHITE | ANIM]
    [ 960, 128 + y*256, 64, 39, -31,  -8, WHITE | ANIM]
    [1040, 128 + y*256, 64, 39, -31,  -8, WHITE | ANIM]
    [1120, 128 + y*256, 64, 31, -31,  -8, WHITE | ANIM]
    [1200, 128 + y*256, 64, 47, -31, -16, WHITE | ANIM]
    [1280, 128 + y*256, 64, 15, -31,   0, WHITE | ANIM]
    [1360, 128 + y*256, 64, 31, -31,  -8, WHITE | ANIM]
    [1440, 128 + y*256, 64, 31, -31,  -8, WHITE | ANIM]

    [   0, 192 + y*256, 64, 31, -31,   0, WHITE | ANIM]
    [  80, 192 + y*256, 64, 31, -31,   0, WHITE | ANIM]
    [ 160, 192 + y*256, 64, 23, -31,   0, WHITE | ANIM]
    [ 240, 192 + y*256, 64, 23, -31,   0, WHITE | ANIM]
    [ 320, 192 + y*256, 64, 31, -31,   0, WHITE | ANIM]
    [ 400, 192 + y*256, 64, 31, -31,   0, WHITE | ANIM]
    [ 480, 192 + y*256, 64, 23, -31,   0, WHITE | ANIM]
    [ 560, 192 + y*256, 64, 23, -31,   0, WHITE | ANIM]
    [ 640, 192 + y*256, 64, 39, -31,  -8, WHITE | ANIM]
    [ 720, 192 + y*256, 64, 39, -31,  -8, WHITE | ANIM]
    [ 800, 192 + y*256, 64, 31, -31,  -8, WHITE | ANIM]
    [ 880, 192 + y*256, 64, 31, -31,  -8, WHITE | ANIM]
    [ 960, 192 + y*256, 64, 39, -31,  -8, WHITE | ANIM]
    [1040, 192 + y*256, 64, 39, -31,  -8, WHITE | ANIM]
    [1120, 192 + y*256, 64, 31, -31,  -8, WHITE | ANIM]
    [1200, 192 + y*256, 64, 47, -31, -16, WHITE | ANIM]
    [1280, 192 + y*256, 64, 15, -31,   0, WHITE | ANIM]
    [1360, 192 + y*256, 64, 31, -31,  -8, WHITE | ANIM]
    [1440, 192 + y*256, 64, 31, -31,  -8, WHITE | ANIM]
}
template template_greenery(y) {
    [   0, y*130, 64, 101, -31, -70, WHITE | ANIM]
    [  80, y*130, 64, 101, -31, -70, WHITE | ANIM]
    [ 160, y*130, 64, 93,  -31, -70, WHITE | ANIM]
    [ 240, y*130, 64, 93,  -31, -70, WHITE | ANIM]
    [ 320, y*130, 64, 101, -31, -70, WHITE | ANIM]
    [ 400, y*130, 64, 101, -31, -70, WHITE | ANIM]
    [ 480, y*130, 64, 93,  -31, -70, WHITE | ANIM]
    [ 560, y*130, 64, 93,  -31, -70, WHITE | ANIM]
    [ 640, y*130, 64, 109, -31, -78, WHITE | ANIM]
    [ 720, y*130, 64, 109, -31, -78, WHITE | ANIM]
    [ 800, y*130, 64, 101, -31, -78, WHITE | ANIM]
    [ 880, y*130, 64, 101, -31, -78, WHITE | ANIM]
    [ 960, y*130, 64, 109, -31, -78, WHITE | ANIM]
    [1040, y*130, 64, 109, -31, -78, WHITE | ANIM]
    [1120, y*130, 64, 101, -31, -78, WHITE | ANIM]
    [1200, y*130, 64, 117, -31, -86, WHITE | ANIM]
    [1280, y*130, 64, 85,  -31, -70, WHITE | ANIM]
    [1360, y*130, 64, 101, -31, -78, WHITE | ANIM]
    [1440, y*130, 64, 101, -31, -78, WHITE | ANIM]
}
template template_greenery_32() {
    template_greenery(0)
    template_greenery(1)
    template_greenery(2)
    template_greenery(3)
    template_greenery(4)
    template_greenery(5)
    template_greenery(6)
    template_greenery(7)
    template_greenery(8)
    template_greenery(9)
    template_greenery(10)
    template_greenery(11)
    template_greenery(12)
    template_greenery(13)
    template_greenery(14)
    template_greenery(15)
    template_greenery(16)
    template_greenery(17)
    template_greenery(18)
    template_greenery(19)
    template_greenery(20)
    template_greenery(21)
    template_greenery(22)
    template_greenery(23)
    template_greenery(24)
    template_greenery(25)
    template_greenery(26)
    template_greenery(27)
    template_greenery(28)
    template_greenery(29)
    template_greenery(30)
    template_greenery(31)
}
template template_oasis_T1(y) {
    [    0, y*160, 32, 134, -31, -103, ANIM ]
    [  144, y*160, 32, 134, -31, -103, ANIM ]
    [  288, y*160, 32, 134, -31, -103, ANIM ]
    [  432, y*160, 32, 134, -31, -103, ANIM ]
    [  576, y*160, 32, 134, -31, -103, ANIM ]
    [  720, y*160, 32, 134, -31, -103, ANIM ]
    [  864, y*160, 32, 134, -31, -103, ANIM ]
    [ 1008, y*160, 32, 134, -31, -103, ANIM ]
    [ 1152, y*160, 32, 134, -31, -103, ANIM ]
    [ 1296, y*160, 32, 134, -31, -103, ANIM ]
    [ 1440, y*160, 32, 134, -31, -103, ANIM ]
    [ 1584, y*160, 32, 134, -31, -103, ANIM ]
    [ 1728, y*160, 32, 134, -31, -103, ANIM ]
    [ 1872, y*160, 32, 134, -31, -103, ANIM ]
    [ 2016, y*160, 32, 134, -31, -103, ANIM ]
    [ 2160, y*160, 32, 134, -31, -103, ANIM ]
}
template template_oasis_T1_32() {
    template_oasis_T1(0)
    template_oasis_T1(1)
    template_oasis_T1(2)
    template_oasis_T1(3)
    template_oasis_T1(4)
    template_oasis_T1(5)
    template_oasis_T1(6)
    template_oasis_T1(7)
    template_oasis_T1(8)
    template_oasis_T1(9)
    template_oasis_T1(10)
    template_oasis_T1(11)
    template_oasis_T1(12)
    template_oasis_T1(13)
    template_oasis_T1(14)
    template_oasis_T1(15)
    template_oasis_T1(16)
    template_oasis_T1(17)
    template_oasis_T1(18)
    template_oasis_T1(19)
    template_oasis_T1(20)
    template_oasis_T1(21)
    template_oasis_T1(22)
    template_oasis_T1(23)
    template_oasis_T1(24)
    template_oasis_T1(25)
    template_oasis_T1(26)
    template_oasis_T1(27)
    template_oasis_T1(28)
    template_oasis_T1(29)
    template_oasis_T1(30)
    template_oasis_T1(31)
}
template template_oasis_T2(y) {
    [    0+32, y*160, 64, 150, -31, -119, ANIM ]
    [  144+32, y*160, 64, 150, -31, -119, ANIM ]
    [  288+32, y*160, 64, 150, -31, -119, ANIM ]
    [  432+32, y*160, 64, 150, -31, -119, ANIM ]
    [  576+32, y*160, 64, 150, -31, -119, ANIM ]
    [  720+32, y*160, 64, 150, -31, -119, ANIM ]
    [  864+32, y*160, 64, 150, -31, -119, ANIM ]
    [ 1008+32, y*160, 64, 150, -31, -119, ANIM ]
    [ 1152+32, y*160, 64, 150, -31, -119, ANIM ]
    [ 1296+32, y*160, 64, 150, -31, -119, ANIM ]
    [ 1440+32, y*160, 64, 150, -31, -119, ANIM ]
    [ 1584+32, y*160, 64, 150, -31, -119, ANIM ]
    [ 1728+32, y*160, 64, 150, -31, -119, ANIM ]
    [ 1872+32, y*160, 64, 150, -31, -119, ANIM ]
    [ 2016+32, y*160, 64, 150, -31, -119, ANIM ]
    [ 2160+32, y*160, 64, 150, -31, -119, ANIM ]
}
template template_oasis_T2_32() {
    template_oasis_T2(0)
    template_oasis_T2(1)
    template_oasis_T2(2)
    template_oasis_T2(3)
    template_oasis_T2(4)
    template_oasis_T2(5)
    template_oasis_T2(6)
    template_oasis_T2(7)
    template_oasis_T2(8)
    template_oasis_T2(9)
    template_oasis_T2(10)
    template_oasis_T2(11)
    template_oasis_T2(12)
    template_oasis_T2(13)
    template_oasis_T2(14)
    template_oasis_T2(15)
    template_oasis_T2(16)
    template_oasis_T2(17)
    template_oasis_T2(18)
    template_oasis_T2(19)
    template_oasis_T2(20)
    template_oasis_T2(21)
    template_oasis_T2(22)
    template_oasis_T2(23)
    template_oasis_T2(24)
    template_oasis_T2(25)
    template_oasis_T2(26)
    template_oasis_T2(27)
    template_oasis_T2(28)
    template_oasis_T2(29)
    template_oasis_T2(30)
    template_oasis_T2(31)
}
template template_oasis_T3(y) {
    [    0+96, y*160, 32, 134, 1, -103, ANIM ]
    [  144+96, y*160, 32, 134, 1, -103, ANIM ]
    [  288+96, y*160, 32, 134, 1, -103, ANIM ]
    [  432+96, y*160, 32, 134, 1, -103, ANIM ]
    [  576+96, y*160, 32, 134, 1, -103, ANIM ]
    [  720+96, y*160, 32, 134, 1, -103, ANIM ]
    [  864+96, y*160, 32, 134, 1, -103, ANIM ]
    [ 1008+96, y*160, 32, 134, 1, -103, ANIM ]
    [ 1152+96, y*160, 32, 134, 1, -103, ANIM ]
    [ 1296+96, y*160, 32, 134, 1, -103, ANIM ]
    [ 1440+96, y*160, 32, 134, 1, -103, ANIM ]
    [ 1584+96, y*160, 32, 134, 1, -103, ANIM ]
    [ 1728+96, y*160, 32, 134, 1, -103, ANIM ]
    [ 1872+96, y*160, 32, 134, 1, -103, ANIM ]
    [ 2016+96, y*160, 32, 134, 1, -103, ANIM ]
    [ 2160+96, y*160, 32, 134, 1, -103, ANIM ]
}
template template_oasis_T3_32() {
    template_oasis_T3(0)
    template_oasis_T3(1)
    template_oasis_T3(2)
    template_oasis_T3(3)
    template_oasis_T3(4)
    template_oasis_T3(5)
    template_oasis_T3(6)
    template_oasis_T3(7)
    template_oasis_T3(8)
    template_oasis_T3(9)
    template_oasis_T3(10)
    template_oasis_T3(11)
    template_oasis_T3(12)
    template_oasis_T3(13)
    template_oasis_T3(14)
    template_oasis_T3(15)
    template_oasis_T3(16)
    template_oasis_T3(17)
    template_oasis_T3(18)
    template_oasis_T3(19)
    template_oasis_T3(20)
    template_oasis_T3(21)
    template_oasis_T3(22)
    template_oasis_T3(23)
    template_oasis_T3(24)
    template_oasis_T3(25)
    template_oasis_T3(26)
    template_oasis_T3(27)
    template_oasis_T3(28)
    template_oasis_T3(29)
    template_oasis_T3(30)
    template_oasis_T3(31)
}
template template_road() {
    [   0, 0, 64, 31, -31,  0]
    [  80, 0, 64, 31, -31,  0]
    [ 160, 0, 64, 31, -31,  0]
    [ 240, 0, 64, 31, -31,  0]
    [ 320, 0, 64, 31, -31,  0]
    [ 400, 0, 64, 31, -31,  0]
    [ 480, 0, 64, 31, -31,  0]
    [ 560, 0, 64, 31, -31,  0]
    [ 640, 0, 64, 31, -31,  0]
    [ 720, 0, 64, 31, -31,  0]
    [ 800, 0, 64, 31, -31,  0]
    [ 880, 0, 64, 39, -31, -8]
    [ 960, 0, 64, 23, -31,  0]
    [1040, 0, 64, 23, -31,  0]
    [1120, 0, 64, 39, -31, -8]
    [1200, 0, 64, 31, -31,  0]
    [1280, 0, 64, 31, -31,  0]
    [1360, 0, 64, 31, -31,  0]
    [1440, 0, 64, 31, -31,  0]
}
template template_rail(y) {
    [   0, y*64, 64, 31, -31,  0]
    [  80, y*64, 64, 31, -31,  0]
    [ 160, y*64, 64, 31, -31,  0]
    [ 240, y*64, 64, 31, -31,  0]
    [ 320, y*64, 64, 31, -31,  0]
    [ 400, y*64, 64, 31, -31,  0]
    [ 480, y*64, 64, 31, -31,  0]
    [ 560, y*64, 64, 31, -31,  0]
    [ 640, y*64, 64, 31, -31,  0]
    [ 720, y*64, 64, 31, -31,  0]
    [ 800, y*64, 64, 31, -31,  0]
    [ 880, y*64, 64, 31, -31,  0]
    [ 960, y*64, 64, 39, -31, -8]
    [1040, y*64, 64, 31, -31,  0]
    [1120, y*64, 64, 31, -31,  0]
    [1200, y*64, 64, 23, -31,  0]
    [1280, y*64, 64, 31, -31, -8]
    [1360, y*64, 64, 23, -31,  0]
    [1440, y*64, 64, 31, -31, -8]
    [1520, y*64, 64, 39, -31, -8]
    [1600, y*64, 64, 39, -31, -8]
    [1680, y*64, 64, 23, -31,  0]
    [1760, y*64, 64, 23, -31,  0]
    [1840, y*64, 64, 39, -31, -8]
    [1920, y*64, 64, 31, -31,  0]
    [2000, y*64, 64, 31, -31,  0]
}
template template_ogfx_tunnels() {
    // rail
    [  0, 0, 64, 39, -31,  -8]
    [ 80, 0, 44, 39, -11, -38]
    [160, 0, 64, 23, -31,   0]
    [240, 0, 64, 23, -31, -30]
    [320, 0, 64, 23, -31,   0]
    [400, 0, 64, 23, -31, -30]
    [480, 0, 64, 39, -31,  -8]
    [560, 0, 44, 39, -31, -38]
    // monorail
    [  0, 50, 64, 39, -31,  -8]
    [ 80, 50, 44, 39, -11, -38]
    [160, 50, 64, 23, -31,   0]
    [240, 50, 64, 23, -31, -30]
    [320, 50, 64, 23, -31,   0]
    [400, 50, 64, 23, -31, -30]
    [480, 50, 64, 39, -31,  -8]
    [560, 50, 44, 39, -31, -38]
    // maglev
    [  0, 100, 64, 39, -31,  -8]
    [ 80, 100, 44, 39, -11, -38]
    [160, 100, 64, 23, -31,   0]
    [240, 100, 64, 23, -31, -30]
    [320, 100, 64, 23, -31,   0]
    [400, 100, 64, 23, -31, -30]
    [480, 100, 64, 39, -31,  -8]
    [560, 100, 44, 39, -31, -38]
    // road
    [  0, 150, 64, 39, -31,  -8]
    [ 80, 150, 45, 39, -12, -38]
    [160, 150, 64, 23, -31,   0]
    [240, 150, 64, 22, -31, -29]
    [320, 150, 64, 23, -31,   0]
    [400, 150, 64, 22, -31, -29]
    [480, 150, 64, 39, -31,  -8]
    [560, 150, 45, 39, -31, -38]
}
template template_ogfx_railtype_tunnels() {
    [  0, 200,  35, 33,  -31,  -2]
    [ 80, 200,  40, 37,   -7, -38]
    [160, 200,  35, 21,  -31,   0]
    [240, 200,  40, 22,  -7,  -29]
    [320, 200,  35, 21,   -2,   0]
    [400, 200,  40, 22,  -31, -29]
    [480, 200,  35, 33,   -2,  -2]
    [560, 200,  40, 37,  -31, -38]
}
template template_ogfx2_tunnels() {
    // rail
    [  0, 0, 64, 39, -31,  -8]
    [ 80, 0, 45, 39, -12, -38]
    [160, 0, 64, 23, -31,   0]
    [240, 0, 64, 23, -31, -30]
    [320, 0, 64, 23, -31,   0]
    [400, 0, 64, 23, -31, -30]
    [480, 0, 64, 39, -31,  -8]
    [560, 0, 45, 39, -31, -38]
    // monorail
    [  0, 50, 64, 39, -31,  -8]
    [ 80, 50, 45, 39, -12, -38]
    [160, 50, 64, 23, -31,   0]
    [240, 50, 64, 23, -31, -30]
    [320, 50, 64, 23, -31,   0]
    [400, 50, 64, 23, -31, -30]
    [480, 50, 64, 39, -31,  -8]
    [560, 50, 45, 39, -31, -38]
    // maglev
    [  0, 100, 64, 39, -31,  -8]
    [ 80, 100, 45, 39, -12, -38]
    [160, 100, 64, 23, -31,   0]
    [240, 100, 64, 23, -31, -30]
    [320, 100, 64, 23, -31,   0]
    [400, 100, 64, 23, -31, -30]
    [480, 100, 64, 39, -31,  -8]
    [560, 100, 45, 39, -31, -38]
    // road
    [  0, 150, 64, 39, -31,  -8]
    [ 80, 150, 64, 39, -31, -38]
    [160, 150, 64, 39, -31,   0]
    [240, 150, 64, 39, -31, -30]
    [320, 150, 64, 39, -31,   0]
    [400, 150, 64, 39, -31, -30]
    [480, 150, 64, 39, -31,  -8]
    [560, 150, 64, 39, -31, -38]
}
template template_ogfx2_railtype_tunnels() {
    [0,   200, 32, 29, -31,   2]
    [48,  200, 45, 39, -12, -38]
    [112, 200, 24, 17, -31,   4]
    [144, 200, 41, 23,  -8, -30]
    [192, 200, 24, 17,   9,   4]
    [224, 200, 41, 23, -31, -30]
    [272, 200, 32, 29,   1,   2]
    [320, 200, 45, 39, -31, -38]
}
template template_cross_rail(y) {
    [   0, y*64, 64, 31, -31, 0, WHITE | ANIM]
    [  80, y*64, 64, 31, -31, 0, WHITE | ANIM]
    [ 160, y*64, 64, 31, -31, 0, WHITE | ANIM]
    [ 240, y*64, 64, 31, -31, 0, WHITE | ANIM]
}
template template_text() {
    // OGFX
    [   0, 0, 64, 41, -31, -18]
    // OGFX 2
    [  80, 0, 64, 41, -31, -18]
    // GRID
    [ 160, 0, 64, 41, -31, -18]
    // NO GRID
    [ 240, 0, 64, 41, -31, -18]
    // 2x
    [ 320, 0, 64, 41, -31, -18]
    // AUTO
    [ 400, 0, 64, 64, -30, -19]
    // DO NOT USE
    [ 480, 0, 64, 64, -30, -19]
    [ 560, 0, 64, 41, -31, -18]
    [ 640, 0, 64, 41, -31, -18]
    [ 720, 0, 64, 41, -31, -18]
    [ 800, 0, 64, 41, -31, -18]
    [ 880, 0, 64, 41, -31, -18]
    [ 960, 0, 64, 41, -31, -18]
    [1040, 0, 64, 41, -31, -18]
    [1120, 0, 64, 41, -31, -18]
    [1200, 0, 64, 41, -31, -18]
    [1280, 0, 64, 41, -31, -18]
    [1360, 0, 64, 41, -31, -18]
    [1440, 0, 64, 41, -31, -18]
}

// OGFX2 Templates stolen to expedite things
// Terrain: Standard groundtiles
template template_groundtiles_opengfx2(x, y, z) {
	[   1*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[  81*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 161*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]
	[ 241*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]

	[ 321*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 399*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,   0*z ]
	[ 479*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]
	[ 559*z+x*z, 1*z+y*z, 64*z, 24*z-1, -31*z,   0*z ]

	[ 639*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
	[ 719*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
	[ 799*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -8*z ]
	[ 879*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -8*z ]

	[ 959*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
	[1039*z+x*z, 1*z+y*z, 64*z, 40*z-1, -31*z,  -8*z ]
	[1119*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -8*z ]
	[1197*z+x*z, 1*z+y*z, 64*z, 48*z-1, -31*z, -16*z ]

	[1277*z+x*z, 1*z+y*z, 64*z, 16*z-1, -31*z,   0*z ]
	[1357*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -8*z ]
	[1437*z+x*z, 1*z+y*z, 64*z, 32*z-1, -31*z,  -8*z ]
}

/////////////////////////////////////////////////////////////////////
//  FUNCTIONS
/////////////////////////////////////////////////////////////////////

// randomly choose an "offset" to get one of the variants of the 19 sloped terrain tiles
random_switch (FEAT_OBJECTS, SELF, random_ground_32) {
    1: 0;
    1: 19;
    1: 38;
    1: 57;
    1: 76;
    1: 95;
    1: 114;
    1: 133;
    1: 152;
    1: 171;
    1: 190;
    1: 209;
    1: 228;
    1: 247;
    1: 266;
    1: 285;
    1: 304;
    1: 323;
    1: 342;
    1: 361;
    1: 380;
    1: 399;
    1: 418;
    1: 437;
    1: 456;
    1: 475;
    1: 494;
    1: 513;
    1: 532;
    1: 551;
    1: 570;
    1: 589;
}

// decide between ground slopes and coast slopes
switch (FEAT_OBJECTS, SELF, function_decide_coast_add_4, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0), 
    STORE_TEMP(nearby_tile_height(0, 0), 4), 
    // flat
    (  ( LOAD_TEMP(0) == 0   &&   LOAD_TEMP(4) == 0 )   &&   nearby_tile_water_class(0, 0) )    || 
    // two raised corners
    (  ( LOAD_TEMP(0) == 3   &&   LOAD_TEMP(4) == 0 )   &&   ( (nearby_tile_water_class(-1, 0) && nearby_tile_slope(-1, 0) == 0) || (nearby_tile_water_class(-1, 1) && nearby_tile_slope(-1, 1) == 0) || (nearby_tile_water_class(-1, -1) && nearby_tile_slope(-1, -1) == 0) )  )  ||
    (  ( LOAD_TEMP(0) == 6   &&   LOAD_TEMP(4) == 0 )   &&   ( (nearby_tile_water_class(1, -1) && nearby_tile_slope(1, -1) == 0) || (nearby_tile_water_class(0, -1) && nearby_tile_slope(0, -1) == 0) || (nearby_tile_water_class(-1, -1) && nearby_tile_slope(-1, -1) == 0) )  )  ||
    (  ( LOAD_TEMP(0) == 9   &&   LOAD_TEMP(4) == 0 )   &&   ( (nearby_tile_water_class(1, 1)  && nearby_tile_slope(1, 1)  == 0) || (nearby_tile_water_class(0, 1)  && nearby_tile_slope(0, 1)  == 0) || (nearby_tile_water_class(-1, 1)  && nearby_tile_slope(-1, 1)  == 0) )  )  ||
    (  ( LOAD_TEMP(0) == 12  &&   LOAD_TEMP(4) == 0 )   &&   ( (nearby_tile_water_class(1, -1) && nearby_tile_slope(1, -1) == 0) || (nearby_tile_water_class(1, 0)  && nearby_tile_slope(1, 0)  == 0) || (nearby_tile_water_class(1, 1)   && nearby_tile_slope(1, 1)   == 0) )  )  ||
    // one raised corner
    (  ( LOAD_TEMP(0) == 1   &&   LOAD_TEMP(4) == 0 )   &&   ( nearby_tile_water_class(-1, 0) || nearby_tile_water_class(0, 1)  || nearby_tile_water_class(-1, 1)  )  )  || 
    (  ( LOAD_TEMP(0) == 2   &&   LOAD_TEMP(4) == 0 )   &&   ( nearby_tile_water_class(-1, 0) || nearby_tile_water_class(0, -1) || nearby_tile_water_class(-1, -1) )  )  ||
    (  ( LOAD_TEMP(0) == 4   &&   LOAD_TEMP(4) == 0 )   &&   ( nearby_tile_water_class(1, 0)  || nearby_tile_water_class(0, -1) || nearby_tile_water_class(1, 1)   )  )  ||
    (  ( LOAD_TEMP(0) == 8   &&   LOAD_TEMP(4) == 0 )   &&   ( nearby_tile_water_class(1, 0)  || nearby_tile_water_class(0, 1)  || nearby_tile_water_class(1, 1)   )  )  ||
    // one lowered corner
    (  ( LOAD_TEMP(0) == 7   &&   LOAD_TEMP(4) == 0 )   &&   nearby_tile_water_class(-1, -1)  )  ||
    (  ( LOAD_TEMP(0) == 11  &&   LOAD_TEMP(4) == 0 )   &&   nearby_tile_water_class(-1, 1)   )  ||
    (  ( LOAD_TEMP(0) == 13  &&   LOAD_TEMP(4) == 0 )   &&   nearby_tile_water_class(1, 1)    )  ||
    (  ( LOAD_TEMP(0) == 14  &&   LOAD_TEMP(4) == 0 )   &&   nearby_tile_water_class(1, -1)   )  ||
    // steep slopes
    (  ( LOAD_TEMP(0) == 15  &&   LOAD_TEMP(4) == 0 )   &&   nearby_tile_water_class(1, 1)   )  ||
    (  ( LOAD_TEMP(0) == 16  &&   LOAD_TEMP(4) == 0 )   &&   nearby_tile_water_class(-1, -1) )  ||
    (  ( LOAD_TEMP(0) == 17  &&   LOAD_TEMP(4) == 0 )   &&   nearby_tile_water_class(-1, 1)  )  ||
    (  ( LOAD_TEMP(0) == 18  &&   LOAD_TEMP(4) == 0 )   &&   nearby_tile_water_class(1, -1)  )
]) {
    1: 4;
    0;
}

switch (FEAT_OBJECTS, SELF, function_decide_sand_snowline, [
    STORE_TEMP(nearby_tile_height(0, 0), 2),
    STORE_TEMP(LOAD_TEMP(2) >= snowline_height+2 ? 57 : 
              (LOAD_TEMP(2) == snowline_height+1 ? 38 : 
              (LOAD_TEMP(2) == snowline_height+0 ? 19 :
              (LOAD_TEMP(2) == snowline_height-1 ? 0  : 0))), 1)
]) {
    return;
}

switch (FEAT_OBJECTS, SELF, function_build_view_3_on_water, [
    (view == 0 && nearby_tile_water_class(0, 0) == WATER_CLASS_NONE) ||
    (view == 0 && nearby_tile_water_class(0, 0) != WATER_CLASS_NONE && nearby_tile_slope(0, 0) != 0) ||

    (view == 1 && nearby_tile_water_class(0, 0) == WATER_CLASS_NONE) ||
    (view == 1 && nearby_tile_water_class(0, 0) != WATER_CLASS_NONE && nearby_tile_slope(0, 0) != 0) ||

    (view == 2 && nearby_tile_water_class(0, 0) == WATER_CLASS_NONE) ||
    (view == 2 && nearby_tile_water_class(0, 0) != WATER_CLASS_NONE && nearby_tile_slope(0, 0) != 0) ||

    (view == 3 && nearby_tile_water_class(0, 0) != WATER_CLASS_NONE) ||
    (view == 3 && nearby_tile_object_view(0, 0) == 3) ||
    (view == 3 && nearby_tile_object_view(0, 0) == 0 && nearby_tile_height(0, 0) == 0) ||
    (view == 3 && nearby_tile_object_view(0, 0) == 1 && nearby_tile_height(0, 0) == 0) ||
    (view == 3 && nearby_tile_object_view(0, 0) == 2 && nearby_tile_height(0, 0) == 0)
    ]) {
    1: return CB_RESULT_LOCATION_ALLOW;
    return string(STR_error_plants);
}

switch (FEAT_OBJECTS, SELF, function_slope_index_to_coast_index, LOAD_TEMP(0)) {
    1: 1 + 5935;
    2: 2 + 5935;
    3: 3 + 5935;
    4: 4 + 5935;
    6: 6 + 5935;
    7: 7 + 5935;
    8: 8 + 5935;
    9: 9 + 5935;
    11: 11 + 5935;
    12: 12 + 5935;
    13: 13 + 5935;
    14: 14 + 5935;
    15: 10 + 5935;
    16: 0 + 5935;
    17: 5 + 5935;
    18: 15 + 5935;

    0: 4061;
}

// get random bits from a nearby tile (with x_offset, y_offset) for RANDOM OASIS
switch (FEAT_OBJECTS, SELF, function_random_bits_from_tile_3_ranges, x_offset, y_offset, nearby_tile_random_bits(x_offset, y_offset)) {
    0..84: 0;
    85..169: 1;
    170..255: 2;
}
switch (FEAT_OBJECTS, SELF, function_random_bits_from_tile_16_ranges, x_offset, y_offset, nearby_tile_random_bits(x_offset, y_offset)) {
    0..15: 1;
    16..31: 2;
    32..47: 3;
    48..63: 4;
    64..79: 5;
    80..95: 6;
    96..111: 7;
    112..127: 8;
    128..143: 9;
    144..159: 10;
    160..175: 11;
    176..191: 12;
    192..207: 13;
    208..223: 14;
    224..239: 15;
    240..255: 16;
}
switch (FEAT_OBJECTS, SELF, function_random_bits_from_tile_32_ranges, x_offset, y_offset, nearby_tile_random_bits(x_offset, y_offset)) {
    0..7: 1;
    8..15: 2;
    16..23: 3;
    24..31: 4;
    32..39: 5;
    40..47: 6;
    48..55: 7;
    56..63: 8;
    64..71: 9;
    72..79: 10;
    80..87: 11;
    88..95: 12;
    96..103: 13;
    104..111: 14;
    112..119: 15;
    120..127: 16;
    128..135: 17;
    136..143: 18;
    144..151: 19;
    152..159: 20;
    160..167: 21;
    168..175: 22;
    176..183: 23;
    184..191: 24;
    192..199: 25;
    200..207: 26;
    208..215: 27;
    216..223: 28;
    224..231: 29;
    232..239: 30;
    240..247: 31;
    248..255: 32;
}

// get random bits from a nearby tile (with x_offset, y_offset) for RANDOM CC RECOLOUR
switch (FEAT_OBJECTS, SELF, function_cc_recolour, x_offset, y_offset, nearby_tile_random_bits(x_offset, y_offset)) {
    0..15: 775;     // dark blue
    16..31: 776;    // pale green
    32..47: 777;    // pink
    48..63: 778;    // yellow
    // 64..79: 779;    // red
    80..95: 780;    // light blue
    // 96..111: 781;   // green
    112..127: 782;  // dark green
    // 128..143: 783;  // blue
    144..159: 784;  // cream
    160..175: 785;  // mauve
    // 176..191: 786;  // purple
    // 192..207: 787;  // orange
    208..223: 788;  // brown
    224..239: 789;  // grey
    240..255: 790;  // white
}

// get random bits from a nearby tile (with x_offset, y_offset) for RANDOM ROCKS GEN
switch (FEAT_OBJECTS, SELF, function_random_bits_from_tile_2_ranges, x_offset, y_offset, nearby_tile_random_bits(x_offset, y_offset)) {
    0..127: 0;
    128..255: 1;
}

// disallow oases outside deserts, if placed autmatically
switch (FEAT_OBJECTS, SELF, function_check_desert, terrain_type) {
    TILETYPE_DESERT: return CB_FAILED;
    return CB_RESULT_LOCATION_DISALLOW;
}
switch (FEAT_OBJECTS, SELF, function_oasis_check_owner, owner) {
    0x00..0x0E: return CB_FAILED;
    return function_check_desert();
}
switch (FEAT_OBJECTS, SELF, function_oasis_check_editor, game_mode) {
    GAMEMODE_EDITOR: return CB_FAILED;
    return function_oasis_check_owner();
}



/////////////////////////////////////////////////////////////////////
//  SAND REPLACEMENT
/////////////////////////////////////////////////////////////////////

// OGFX 2
if (climate == CLIMATE_TROPICAL && param_replace == 1) {
    replace ogfx2_grid_sand       (4550, "gfx/ogfx2_grid_ground.png")    { template_groundtiles(0) }
    replace ogfx2_grid_grass_sand (4512, "gfx/ogfx2_grid_ground.png")    { template_groundtiles(2) }
    replace ogfx2_grid_rail       (1037, "gfx/ogfx2_grid_railroad.png")  { template_rail(0) }
    replace ogfx2_grid_monorail   (1119, "gfx/ogfx2_grid_railroad.png")  { template_rail(1) }
    replace ogfx2_grid_maglev     (1201, "gfx/ogfx2_grid_railroad.png")  { template_rail(2) }
    replace ogfx2_grid_road       (1351, "gfx/ogfx2_grid_road.png")      { template_road() }
    replace ogfx2_grid_tunnels_0  (2397, "gfx/ogfx2_nogrid_tunnels.png") { template_ogfx2_tunnels() }
    replace ogfx2_grid_cross_rail (1378, "gfx/ogfx2_grid_cross.png")     { template_cross_rail(0) }
    replace ogfx2_grid_cross_mono (1390, "gfx/ogfx2_grid_cross.png")     { template_cross_rail(1) }
    replace ogfx2_grid_cross_magl (1402, "gfx/ogfx2_grid_cross.png")     { template_cross_rail(2) }
    replacenew(RAILTYPE_TUNNELS, "gfx/ogfx2_nogrid_tunnels.png", 8) { template_ogfx2_railtype_tunnels() }
}

if (climate == CLIMATE_TROPICAL && param_replace == 2) {
    replace ogfx2_nogrid_sand       (4550, "gfx/ogfx2_nogrid_ground.png")   { template_groundtiles(0) }
    replace ogfx2_nogrid_grass_sand (4512, "gfx/ogfx2_nogrid_ground.png")   { template_groundtiles(2) }
    replace ogfx2_nogrid_rail       (1037, "gfx/ogfx2_nogrid_railroad.png") { template_rail(0) }
    replace ogfx2_nogrid_monorail   (1119, "gfx/ogfx2_nogrid_railroad.png") { template_rail(1) }
    replace ogfx2_nogrid_maglev     (1201, "gfx/ogfx2_nogrid_railroad.png") { template_rail(2) }
    replace ogfx2_nogrid_road       (1351, "gfx/ogfx2_nogrid_road.png")     { template_road() }
    replace ogfx2_nogrid_tunnels_0  (2397, "gfx/ogfx2_nogrid_tunnels.png")  { template_ogfx2_tunnels() }
    replace ogfx2_nogrid_cross_rail (1378, "gfx/ogfx2_nogrid_cross.png")    { template_cross_rail(0) }
    replace ogfx2_nogrid_cross_mono (1390, "gfx/ogfx2_nogrid_cross.png")    { template_cross_rail(1) }
    replace ogfx2_nogrid_cross_magl (1402, "gfx/ogfx2_nogrid_cross.png")    { template_cross_rail(2) }
    replacenew(RAILTYPE_TUNNELS, "gfx/ogfx2_nogrid_tunnels.png", 8) { template_ogfx2_railtype_tunnels() }
}

// OGFX
if (climate == CLIMATE_TROPICAL && param_replace == 3) {
    replace ogfx_grid_sand       (4550, "gfx/ogfx_grid_ground.png")    { template_groundtiles(0) }
    replace ogfx_grid_grass_sand (4512, "gfx/ogfx_grid_ground.png")    { template_groundtiles(2) }
    replace ogfx_grid_rail       (1037, "gfx/ogfx_grid_railroad.png")  { template_rail(0) }
    replace ogfx_grid_monorail   (1119, "gfx/ogfx_grid_railroad.png")  { template_rail(1) }
    replace ogfx_grid_maglev     (1201, "gfx/ogfx_grid_railroad.png")  { template_rail(2) }
    replace ogfx_grid_road       (1351, "gfx/ogfx_grid_road.png")      { template_road() }
    replace ogfx_grid_tunnels_0  (2397, "gfx/ogfx_nogrid_tunnels.png") { template_ogfx_tunnels() }
    replace ogfx_grid_cross_rail (1378, "gfx/ogfx_grid_cross.png")     { template_cross_rail(0) }
    replace ogfx_grid_cross_mono (1390, "gfx/ogfx_grid_cross.png")     { template_cross_rail(1) }
    replace ogfx_grid_cross_magl (1402, "gfx/ogfx_grid_cross.png")     { template_cross_rail(2) }
    replacenew(RAILTYPE_TUNNELS, "gfx/ogfx_nogrid_tunnels.png", 8) { template_ogfx_railtype_tunnels() }
}
if (climate == CLIMATE_TROPICAL && param_replace == 4) {
    replace ogfx_nogrid_sand       (4550, "gfx/ogfx_nogrid_ground.png")   { template_groundtiles(0) }
    replace ogfx_nogrid_grass_sand (4512, "gfx/ogfx_nogrid_ground.png")   { template_groundtiles(2) }
    replace ogfx_nogrid_rail       (1037, "gfx/ogfx_nogrid_railroad.png") { template_rail(0) }
    replace ogfx_nogrid_monorail   (1119, "gfx/ogfx_nogrid_railroad.png") { template_rail(1) }
    replace ogfx_nogrid_maglev     (1201, "gfx/ogfx_nogrid_railroad.png") { template_rail(2) }
    replace ogfx_nogrid_road       (1351, "gfx/ogfx_nogrid_road.png")     { template_road() }
    replace ogfx_nogrid_tunnels_0  (2397, "gfx/ogfx_nogrid_tunnels.png")  { template_ogfx_tunnels() }
    replace ogfx_nogrid_cross_rail (1378, "gfx/ogfx_nogrid_cross.png")    { template_cross_rail(0) }
    replace ogfx_nogrid_cross_mono (1390, "gfx/ogfx_nogrid_cross.png")    { template_cross_rail(1) }
    replace ogfx_nogrid_cross_magl (1402, "gfx/ogfx_nogrid_cross.png")    { template_cross_rail(2) }
    replacenew(RAILTYPE_TUNNELS, "gfx/ogfx_nogrid_tunnels.png", 8) { template_ogfx_railtype_tunnels() }
}

// OGFX 2 ARCTIC
if (climate == CLIMATE_TROPICAL && param_replace == 5) {
    replace ogfx2arctic_grid_sand       (4550, "gfx/ogfx2arctic_grid_ground.png")    { template_groundtiles(0) }
    replace ogfx2arctic_grid_grass_sand (4512, "gfx/ogfx2arctic_grid_ground.png")    { template_groundtiles(2) }
    replace ogfx2arctic_grid_rail       (1037, "gfx/ogfx2arctic_grid_railroad.png")  { template_rail(0) }
    replace ogfx2arctic_grid_monorail   (1119, "gfx/ogfx2arctic_grid_railroad.png")  { template_rail(1) }
    replace ogfx2arctic_grid_maglev     (1201, "gfx/ogfx2arctic_grid_railroad.png")  { template_rail(2) }
    replace ogfx2arctic_grid_road       (1351, "gfx/ogfx2arctic_grid_road.png")      { template_road() }
    replace ogfx2arctic_grid_tunnels_0  (2397, "gfx/ogfx2arctic_nogrid_tunnels.png") { template_ogfx2_tunnels() }
    replace ogfx2arctic_grid_cross_rail (1378, "gfx/ogfx2arctic_grid_cross.png")     { template_cross_rail(0) }
    replace ogfx2arctic_grid_cross_mono (1390, "gfx/ogfx2arctic_grid_cross.png")     { template_cross_rail(1) }
    replace ogfx2arctic_grid_cross_magl (1402, "gfx/ogfx2arctic_grid_cross.png")     { template_cross_rail(2) }
    replacenew(RAILTYPE_TUNNELS, "gfx/ogfx2arctic_nogrid_tunnels.png", 8) { template_ogfx2_railtype_tunnels() }
}

if (climate == CLIMATE_TROPICAL && param_replace == 6) {
    replace ogfx2arctic_nogrid_sand       (4550, "gfx/ogfx2arctic_nogrid_ground.png")   { template_groundtiles(0) }
    replace ogfx2arctic_nogrid_grass_sand (4512, "gfx/ogfx2arctic_nogrid_ground.png")   { template_groundtiles(2) }
    replace ogfx2arctic_nogrid_rail       (1037, "gfx/ogfx2arctic_nogrid_railroad.png") { template_rail(0) }
    replace ogfx2arctic_nogrid_monorail   (1119, "gfx/ogfx2arctic_nogrid_railroad.png") { template_rail(1) }
    replace ogfx2arctic_nogrid_maglev     (1201, "gfx/ogfx2arctic_nogrid_railroad.png") { template_rail(2) }
    replace ogfx2arctic_nogrid_road       (1351, "gfx/ogfx2arctic_nogrid_road.png")     { template_road() }
    replace ogfx2arctic_nogrid_tunnels_0  (2397, "gfx/ogfx2arctic_nogrid_tunnels.png")  { template_ogfx2_tunnels() }
    replace ogfx2arctic_nogrid_cross_rail (1378, "gfx/ogfx2arctic_nogrid_cross.png")    { template_cross_rail(0) }
    replace ogfx2arctic_nogrid_cross_mono (1390, "gfx/ogfx2arctic_nogrid_cross.png")    { template_cross_rail(1) }
    replace ogfx2arctic_nogrid_cross_magl (1402, "gfx/ogfx2arctic_nogrid_cross.png")    { template_cross_rail(2) }
    replacenew(RAILTYPE_TUNNELS, "gfx/ogfx2arctic_nogrid_tunnels.png", 8) { template_ogfx2_railtype_tunnels() }
}

/////////////////////////////////////////////////////////////////////
//  JGRPP DESERT ROCKS
/////////////////////////////////////////////////////////////////////

spriteset (grid_desert_rocks,  "gfx/tropical_groundtiles_desert_rocks_gridline_8bpp.png")  { template_groundtiles_opengfx2(0, 0, 1) }
spriteset (gridless_desert_rocks,  "gfx/tropical_groundtiles_desert_rocks_nogridline_8bpp.png")  { template_groundtiles_opengfx2(0, 0, 1) }
spriteset (grid_arctic_rocks,  "gfx/arctic_groundtiles_rocks_alt_gridline_8bpp.png")  { template_groundtiles_opengfx2(0, 0, 1) }
spriteset (gridless_arctic_rocks,  "gfx/arctic_groundtiles_rocks_alt_nogridline_8bpp.png")  { template_groundtiles_opengfx2(0, 0, 1) }

switch (FEAT_NEWLANDSCAPE, SELF, switch_grid_desert_rocks, terrain_type) {
	TILETYPE_DESERT: grid_desert_rocks;
}

switch (FEAT_NEWLANDSCAPE, SELF, switch_gridless_desert_rocks, terrain_type) {
	TILETYPE_DESERT: gridless_desert_rocks;
}

switch (FEAT_NEWLANDSCAPE, SELF, switch_grid_arctic_rocks, terrain_type) {
	TILETYPE_DESERT: grid_arctic_rocks;
}

switch (FEAT_NEWLANDSCAPE, SELF, switch_gridless_arctic_rocks, terrain_type) {
	TILETYPE_DESERT: gridless_arctic_rocks;
}

// OGFX 2
if (climate == CLIMATE_TROPICAL && param_replace == 1) {
    item (FEAT_NEWLANDSCAPE, item_rocks, NEW_LANDSCAPE_ID_ROCKS)  {
	    property {
		    enable_recolour: 0;
	    }
	    graphics {
		    default: switch_grid_desert_rocks;
	    }
    }

    item (FEAT_GLOBALVARS) {
	property {
		allow_rocks_in_desert: 1;
	}
}
}

if (climate == CLIMATE_TROPICAL && param_replace == 2) {
    item (FEAT_NEWLANDSCAPE, item_rocks, NEW_LANDSCAPE_ID_ROCKS)  {
	    property {
		    enable_recolour: 0;
	    }
	    graphics {
		    default: switch_gridless_desert_rocks;
	    }
    }

    item (FEAT_GLOBALVARS) {
	property {
		allow_rocks_in_desert: 1;
	}
}
}

// OGFX 2 ARCTIC
if (climate == CLIMATE_TROPICAL && param_replace == 5) {
    item (FEAT_NEWLANDSCAPE, item_rocks, NEW_LANDSCAPE_ID_ROCKS)  {
	    property {
		    enable_recolour: 0;
	    }
	    graphics {
		    default: switch_grid_arctic_rocks;
	    }
    }

    item (FEAT_GLOBALVARS) {
	property {
		allow_rocks_in_desert: 1;
	}
}
}

if (climate == CLIMATE_TROPICAL && param_replace == 6) {
    item (FEAT_NEWLANDSCAPE, item_rocks, NEW_LANDSCAPE_ID_ROCKS)  {
	    property {
		    enable_recolour: 0;
	    }
	    graphics {
		    default: switch_gridless_arctic_rocks;
	    }
    }

    item (FEAT_GLOBALVARS) {
	property {
		allow_rocks_in_desert: 1;
	}
}
}

/////////////////////////////////////////////////////////////////////
//  OBJECTS
/////////////////////////////////////////////////////////////////////

rocks_recolour_sprites = reserve_sprites(6);

replace(rocks_recolour_sprites) {
    // gray
    recolour_sprite {
        0x00..0xFF: 0x00..0xFF;
    }
    // darker gray
    recolour_sprite {
        0x02..0x03: 0x01;
        0x04..0x0F: 0x01..0x0C;
    }
    // darkest gray
    recolour_sprite {
        0x02..0x05: 0x01;
        0x06..0x0F: 0x01..0x0A;
    }
    // yellow
    recolour_sprite {
        0x01: 0x69;
        0x02: 0x69;
        0x03: 0x20;
        0x04: 0x35;
        0x05: 0x6B;
        0x06: 0x36;
        0x07: 0x37;
        0x08: 0x38;
        0x09: 0x39;
        0x0A: 0x3A;
        0x0B: 0x25;
        0x0C: 0x3B;
        0x0D: 0x26;
        0x0E: 0x27;
        0x0F: 0x45;
    }
    // brown
    recolour_sprite {
        0x01..0x04: 0x46;
        0x05: 0x47;
        0x06..0x0F: 0x70..0x79;
    }
    // darker brown
    recolour_sprite {
        0x01..0x05: 0x46;
        0x06..0x0F: 0x46..0x4F;
    }
}

spriteset (spriteset_text, "gfx/text.png") { template_text() }

spriteset (spriteset_rocks, "gfx/ogfx2_rocks.png") { template_groundtiles(0) }
spriteset (spriteset_rocks_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/ogfx2_rocks_snow_32bpp.png") { template_groundtiles(0) }
spriteset (spriteset_rocks_autosnow_menu, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx/ogfx2_rocks_snow_32bpp.png") { [32, 0, 32, 31, 1, 0] }

spriteset (spriteset_columnar_cacti0, "gfx/cacti_columnar0.png") { template_greenery_32() }
spriteset (spriteset_columnar_cacti1, "gfx/cacti_columnar1.png") { template_greenery_32() }
spriteset (spriteset_globular_cacti0, "gfx/cacti_globular0.png") { template_greenery_32() }
spriteset (spriteset_globular_cacti1, "gfx/cacti_globular1.png") { template_greenery_32() }
spriteset (spriteset_palms0,  "gfx/palms0.png")  { template_greenery_32() }
spriteset (spriteset_palms1,  "gfx/palms1.png")  { template_greenery_32() }
spriteset (spriteset_palms2,  "gfx/palms2.png")  { template_greenery_32() }
spriteset (spriteset_palms3,  "gfx/palms3.png")  { template_greenery_32() }
spriteset (spriteset_plants0, "gfx/plants0.png") { template_greenery_32() }
spriteset (spriteset_plants1, "gfx/plants1.png") { template_greenery_32() }
spriteset (spriteset_plants2, "gfx/plants2.png") { template_greenery_32() }
spriteset (spriteset_plants3, "gfx/plants3.png") { template_greenery_32() }
spriteset (spriteset_people0, "gfx/people0.png") { template_greenery_32() }
spriteset (spriteset_people1, "gfx/people1.png") { template_greenery_32() }
spriteset (spriteset_cars0,   "gfx/cars0.png")   { template_greenery_32() }
spriteset (spriteset_cars1,   "gfx/cars1.png")   { template_greenery_32() }
spriteset (spriteset_oasis_T1,"gfx/oasis.png")   { template_oasis_T1_32() }
spriteset (spriteset_oasis_T2,"gfx/oasis.png")   { template_oasis_T2_32() }
spriteset (spriteset_oasis_T3,"gfx/oasis.png")   { template_oasis_T3_32() }

spriteset (spriteset_ogfx2_oasis_ground_menu, "gfx/oasis_ground_menu.png") { [ 0,   0, 128, 150, -63, -103 ] }
spriteset (spriteset_ogfx_oasis_ground_menu,  "gfx/oasis_ground_menu.png") { [ 150, 0, 128, 150, -63, -103 ] }
spriteset (spriteset_oasis_menu,              "gfx/oasis.png")             { [ 0, 0, 128, 150, -63, -103, ANIM ] }

spritelayout layout_ground_coast { ground { sprite: LOAD_TEMP(2); } }
